class Solution {
    public int findMin(int[] nums) {
        
        int start = 0;
        int end = nums.length -1;
        
        //array is not rotated at all
        if(nums[start] <= nums[end])
            return nums[0];
        
        while(start < end)
        {
            int mid = start + (end - start)/2;
            
            if(nums[mid] > nums[mid +1]){
                return nums[mid +1];
            }
            else if(nums[mid -1] > nums[mid]){
                return nums[mid];
            }
            
            /*min element not found since binary search we trim half the array start <=                *mid min array not in 1st half hence start = mid +1*/
            else if(nums[start] <= nums[mid]){
                start = mid +1;
            }
            
             /*min element not found since binary search we trim half the array mid <= end               *min array not in 2nd half hence end = mid -1*/
            else {
                end = mid -1;
            }   
        }
        return -1;
    }
}
